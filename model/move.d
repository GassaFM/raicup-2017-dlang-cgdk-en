module model.move;

import model.vehicle_type;
import model.action_type;
import model.facility_type;

/**
 * Стратегия игрока может управлять юнитами посредством установки свойств объекта данного класса.
 */
class Move
{
nothrow pure @safe @nogc:

    /**
     * Устанавливает действие игрока.
     */
    ActionTypeOrNull action;
    /**
     * Устанавливает группу юнитов для различных действий.
     * $(BR)
     * Является опциональным параметром для действий `ActionType.clearAndSelect`,
     * `ActionType.addToSelection` и `ActionType.deselect`. Если для этих действий группа юнитов
     * установлена, то параметр `vehicleType`, а также параметры прямоугольной рамки `left`, `top`,
     * `right` и `bottom` будут проигнорированы.
     * $(BR)
     * Является обязательным параметром для действий `ActionType.assign`, `ActionType.dismiss` и
     * `ActionType.disband`. Для действия `ActionType.disband` является единственным учитываемым параметром.
     * $(BR)
     * Корректными значениями являются целые числа от `1` до `game.maxUnitGroup` включительно.
     */
    int group = 0;
    /**
     * Returns: Устанавливает левую границу прямоугольной рамки для выделения юнитов.
     * $(BR)
     * Является обязательным параметром для действий `ActionType.clearAndSelect`,
     * `ActionType.addToSelection` и `ActionType.deselect`, если не установлена группа юнитов.
     * В противном случае граница будет проигнорирована.
     * $(BR)
     * Корректными значениями являются вещественные числа от `0.0` до `right` включительно.
     */
    double left = 0.0;
    /**
     * Returns: Устанавливает верхнюю границу прямоугольной рамки для выделения юнитов.
     * $(BR)
     * Является обязательным параметром для действий `ActionType.clearAndSelect`,
     * `ActionType.addToSelection` и `ActionType.deselect`, если не установлена группа юнитов.
     * В противном случае граница будет проигнорирована.
     * $(BR)
     * Корректными значениями являются вещественные числа от `0.0` до `bottom` включительно.
     */
    double top = 0.0;
    /**
     * Returns: Устанавливает правую границу прямоугольной рамки для выделения юнитов.
     * $(BR)
     * Является обязательным параметром для действий `ActionType.clearAndSelect`,
     * `ActionType.addToSelection` и `ActionType.deselect`, если не установлена группа юнитов.
     * В противном случае граница будет проигнорирована.
     * $(BR)
     * Корректными значениями являются вещественные числа от `left` до `game.worldWidth` включительно.
     */
    double right = 0.0;
    /**
     * Returns: Устанавливает нижнюю границу прямоугольной рамки для выделения юнитов.
     * $(BR)
     * Является обязательным параметром для действий `ActionType.clearAndSelect`,
     * `ActionType.addToSelection` и `ActionType.deselect`, если не установлена группа юнитов.
     * В противном случае граница будет проигнорирована.
     * $(BR)
     * Корректными значениями являются вещественные числа от `top` до `game.worldHeight` включительно.
     */
    double bottom = 0.0;
    /**
     * Устанавливает абсциссу точки или вектора.
     * $(BR)
     * Является обязательным параметром для действия `ActionType.move` и задаёт целевую величину смещения юнитов
     * вдоль оси абсцисс.
     * $(BR)
     * Является обязательным параметром для действия `ActionType.rotate` и задаёт абсциссу точки, относительно
     * которой необходимо совершить поворот.
     * $(BR)
     * Корректными значениями для действия `ActionType.move` являются вещественные числа от
     * `-game.worldWidth` до `game.worldWidth` включительно. Корректными значениями для действия
     * `ActionType.rotate` являются вещественные числа от `-game.worldWidth` до
     * `2.0 * game.worldWidth` включительно.
     */
    double x = 0.0;
    /**
     * Устанавливает ординату точки или вектора.
     * $(BR)
     * Является обязательным параметром для действия `ActionType.move` и задаёт целевую величину смещения юнитов
     * вдоль оси ординат.
     * $(BR)
     * Является обязательным параметром для действия `ActionType.rotate` и задаёт ординату точки, относительно
     * которой необходимо совершить поворот.
     * $(BR)
     * Корректными значениями для действия `ActionType.move` являются вещественные числа от
     * `-game.worldHeight` до `game.worldHeight` включительно. Корректными значениями для действия
     * `ActionType.rotate` являются вещественные числа от `-game.worldHeight` до
     * `2.0 * game.worldHeight` включительно.
     */
    double y = 0.0;
    /**
     * Задаёт угол поворота.
     * $(BR)
     * Является обязательным параметром для действия `ActionType.rotate` и задаёт угол поворота относительно точки
     * (`x`, `y`). Положительные значения соответствуют повороту по часовой стрелке.
     * $(BR)
     * Корректными значениями являются вещественные числа от `-PI` до `PI` включительно.
     */
    double angle = 0.0;
    /**
     * Устанавливает абсолютное ограничение линейной скорости.
     * $(BR)
     * Является опциональным параметром для действий `ActionType.move` и `ActionType.rotate`. Если для
     * действия `ActionType.rotate` установлено ограничение скорости поворота, то этот параметр будет
     * проигнорирован.
     * $(BR)
     * Корректными значениями являются вещественные неотрицательные числа. При этом, `0.0` означает, что
     * ограничение отсутствует.
     */
    double maxSpeed = 0.0;
    /**
     * Устанавливает абсолютное ограничение скорости поворота в радианах за тик.
     * $(BR)
     * Является опциональным параметром для действия `ActionType.rotate`. Если для этого действия установлено
     * ограничение скорости поворота, то параметр `maxSpeed` будет проигнорирован.
     * $(BR)
     * Корректными значениями являются вещественные числа в интервале от `0.0` до `PI` включительно. При
     * этом, `0.0` означает, что ограничение отсутствует.
     */
    double maxAngularSpeed = 0.0;
    /**
     * Устанавливает тип техники.
     * $(BR)
     * Является опциональным параметром для действий `ActionType.clearAndSelect`,
     * `ActionType.addToSelection` и `ActionType.deselect`.
     * Указанные действия будут применены только к технике выбранного типа.
     * Параметр будет проигнорирован, если установлена группа юнитов.
     * $(BR)
     * Является опциональным параметром для действия `ActionType.setupVehicleProduction`.
     * Завод будет настроен на производство техники данного типа. При этом, прогресс производства будет обнулён.
     * Если данный параметр не установлен, то производство техники на заводе будет остановлено.
     */
    VehicleTypeOrNull vehicleType;
    /**
     * Устанавливает идентификатор сооружения.
     * $(BR)
     * Является обязательным параметром для действия `ActionType.setupVehicleProduction`.
     * Если сооружение с данным идентификатором отсутствует в игре, не является заводом по производству техники
     * (`FacilityType.vehicleFactory`) или принадлежит другому игроку, то действие будет проигнорировано.
     */
    long facilityId = -1L;
}
